var express = require('express');
var path = require('path');
var bodyParser = require('body-parser');
var http = require('http');
var router = express.Router();
var scenario = loadModel('scenario');
var attack = loadModel('attack');

var view_dirname = 'scenario/views';
var data = [];
data.title = 'Scenario';
data.site_name = 'Scenario';
data.layout = '../base_views/layouts/home_layout';
scenarioStatus = 'unavailable';

router.use(bodyParser.urlencoded({ extended: true }));
router.use(function(req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header('Access-Control-Allow-Methods', 'DELETE');
  next();
});

// Display all or spesific scenario
router.get('/:id?', function(req, res, next) {
	if (req.params.id == undefined) {
		scenario.findAll().then(function(scenarios) {
			res.json(scenarios);
		});	
	} else {
		scenario.findOne({where: {id: req.params.id}}).then(function(currScenario) {
			console.log(currScenario.customFiles);
			res.json(currScenario);
		});
	}
});

// Create new scenario
router.get('/create', function(req, res, next) {
	data.scenario = [];
	data.url = '/scenario/store';
	attack.findAll().then(function(attacks) {
		data.attacks = [];
		data.attacks.push({value: 0, text: '- Select Attack Type -'});
		attacks.forEach(function(attack, index, arr) {
			var arrayAttack = {};
			arrayAttack['value'] = attack.id;
			arrayAttack['text'] = attack.title;
			data.attacks.push(arrayAttack);
		});
		res.render(path.join(view_dirname, 'create'), data);
	});
});

// Store new scenario into database
router.post('/store', function(req, res, next) {
	scenario.create(req.body).then(function() {
		res.redirect('/scenario');
	});
});

// Edit certain scenario
router.get('/edit/:id', function(req, res, next) {
	scenario.findOne({ where: { id: req.params.id } }).then(function(scenario) {
		data.url = '/scenario/update/'+req.params.id;
		data.scenario = scenario;
		attack.findAll().then(function(attacks) {
			data.attacks = [];
			data.attacks.push({value: 0, text: '- Select Attack Type -'});
			attacks.forEach(function(attack, index, arr) {
				var arrayAttack = {};
				arrayAttack['value'] = attack.id;
				arrayAttack['text'] = attack.title;
				data.attacks.push(arrayAttack);
			});
			res.render(path.join(view_dirname, 'edit'), data);
		});
	});
});

// Update certain scenario inside database
router.post('/update/:id', function(req, res, next) {
	scenario.update(req.body, { where: { id: req.params.id } }).then(function() {
		res.json({status: 'success'});
	});
});

// Delete certain scenario from database
router.delete('/destroy/:id', function(req, res, next) {
	scenario.destroy({ where: { id: req.params.id } }).then(function() {
		res.json({status: 'success'});
	});
});

module.exports = router;
